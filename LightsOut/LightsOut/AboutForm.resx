<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>